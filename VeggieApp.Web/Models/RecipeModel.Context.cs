//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VeggieApp.Web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VeggiesEntities : DbContext
    {
        public VeggiesEntities()
            : base("name=VeggiesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<Metric> Metrics { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Recipe> Recipes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Type> Types { get; set; }
    
        public virtual int Food_Insert(string name, Nullable<bool> isVeggie, Nullable<int> familyId, Nullable<int> sweetness, Nullable<byte> colorId, ObjectParameter id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isVeggieParameter = isVeggie.HasValue ?
                new ObjectParameter("IsVeggie", isVeggie) :
                new ObjectParameter("IsVeggie", typeof(bool));
    
            var familyIdParameter = familyId.HasValue ?
                new ObjectParameter("FamilyId", familyId) :
                new ObjectParameter("FamilyId", typeof(int));
    
            var sweetnessParameter = sweetness.HasValue ?
                new ObjectParameter("Sweetness", sweetness) :
                new ObjectParameter("Sweetness", typeof(int));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Food_Insert", nameParameter, isVeggieParameter, familyIdParameter, sweetnessParameter, colorIdParameter, id);
        }
    
        public virtual ObjectResult<Food_SelectAll_Result> Food_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Food_SelectAll_Result>("Food_SelectAll");
        }
    
        public virtual int Food_SelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Food_SelectById", idParameter);
        }
    
        public virtual int Ingredients_Insert(Nullable<int> recipeId, Nullable<int> foodId, Nullable<int> quantity, Nullable<int> metricId)
        {
            var recipeIdParameter = recipeId.HasValue ?
                new ObjectParameter("RecipeId", recipeId) :
                new ObjectParameter("RecipeId", typeof(int));
    
            var foodIdParameter = foodId.HasValue ?
                new ObjectParameter("FoodId", foodId) :
                new ObjectParameter("FoodId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var metricIdParameter = metricId.HasValue ?
                new ObjectParameter("MetricId", metricId) :
                new ObjectParameter("MetricId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingredients_Insert", recipeIdParameter, foodIdParameter, quantityParameter, metricIdParameter);
        }
    
        public virtual ObjectResult<Metric_SelectAll_Result> Metric_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Metric_SelectAll_Result>("Metric_SelectAll");
        }
    
        public virtual int People_DeleteById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("People_DeleteById", idParameter);
        }
    
        public virtual int People_Insert(ObjectParameter id, string firstName, string lastName, string middleInitial)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("MiddleInitial", middleInitial) :
                new ObjectParameter("MiddleInitial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("People_Insert", id, firstNameParameter, lastNameParameter, middleInitialParameter);
        }
    
        public virtual ObjectResult<People_SelectAll_Result> People_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<People_SelectAll_Result>("People_SelectAll");
        }
    
        public virtual ObjectResult<People_SelectById_Result> People_SelectById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<People_SelectById_Result>("People_SelectById", idParameter);
        }
    
        public virtual int People_Update(Nullable<int> id, string firstName, string lastName, string middleInitial)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleInitialParameter = middleInitial != null ?
                new ObjectParameter("MiddleInitial", middleInitial) :
                new ObjectParameter("MiddleInitial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("People_Update", idParameter, firstNameParameter, lastNameParameter, middleInitialParameter);
        }
    
        public virtual int Recipe_Insert(string title, string description, Nullable<int> categoryId, string authorId, ObjectParameter id)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var authorIdParameter = authorId != null ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Recipe_Insert", titleParameter, descriptionParameter, categoryIdParameter, authorIdParameter, id);
        }
    
        public virtual ObjectResult<Recipe_SelectAll_Result> Recipe_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Recipe_SelectAll_Result>("Recipe_SelectAll");
        }
    
        public virtual ObjectResult<Recipe_SelectById_Result> Recipe_SelectById(Nullable<int> recipeId)
        {
            var recipeIdParameter = recipeId.HasValue ?
                new ObjectParameter("RecipeId", recipeId) :
                new ObjectParameter("RecipeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Recipe_SelectById_Result>("Recipe_SelectById", recipeIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Recipe_SelectById_Result> Recipe_SelectById1(Nullable<int> recipeId)
        {
            var recipeIdParameter = recipeId.HasValue ?
                new ObjectParameter("RecipeId", recipeId) :
                new ObjectParameter("RecipeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Recipe_SelectById_Result>("Recipe_SelectById1", recipeIdParameter);
        }
    }
}
